Question 1
1. D  
2. B  
3. C  
4. B  
5. A  
6. A  
7. B  
8. C  
9. A  
10. C  


Question 2 

import java.text.DecimalFormat;
import java.util.Scanner;

public class FitnessTracker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] names = new String[3];
        String[] ids = new String[3];
        DecimalFormat df = new DecimalFormat("00.00");
        double[] scores = new double[3];

        for (int i = 0; i < 3; i++) {
            System.out.print("Enter participant name: ");
            names[i] = scanner.nextLine();
            System.out.print("Enter participant ID: ");
            ids[i] = scanner.nextLine();
            scores[i] = calcScore();
        }

        int winnerIndex = determineWinner(scores);
        String winnerMessage = "Top Fitness Challenger " + names[winnerIndex] + " of participant ID " + ids[winnerIndex] + " with score of " + df.format(scores[winnerIndex]);
        sortParticipants(names, ids, scores);
        display(names, ids, scores, winnerMessage);
    }

    public static double calcScore() {
        Scanner scanner = new Scanner(System.in);
        double[] trainerAverages = new double[4];
        String[] categories = {"Stamina", "Strength", "Consistency"};

        for (int i = 0; i < 4; i++) {
            double sum = 0;
            for (String category : categories) {
                System.out.print("Enter trainer " + (i + 1) + " score on " + category + ": ");
                sum += scanner.nextDouble();
            }
            trainerAverages[i] = sum / categories.length;
        }

        double finalScore = 0;
        for (double avg : trainerAverages) {
            finalScore += avg;
        }
        return finalScore / trainerAverages.length;
    }

    public static int determineWinner(double[] scores) {
        int maxIndex = 0;
        for (int i = 1; i < scores.length; i++) {
            if (scores[i] > scores[maxIndex]) {
                maxIndex = i;
            }
        }
        return maxIndex;
    }

    public static void sortParticipants(String[] names, String[] ids, double[] scores) {
        for (int i = 0; i < scores.length - 1; i++) {
            for (int j = 0; j < scores.length - i - 1; j++) {
                if (scores[j] < scores[j + 1]) {
                    double tempScore = scores[j];
                    scores[j] = scores[j + 1];
                    scores[j + 1] = tempScore;

                    String tempName = names[j];
                    names[j] = names[j + 1];
                    names[j + 1] = tempName;

                    String tempId = ids[j];
                    ids[j] = ids[j + 1];
                    ids[j + 1] = tempId;
                }
            }
        }
    }

    public static void display(String[] names, String[] ids, double[] scores, String winnerMessage) {
        DecimalFormat df = new DecimalFormat("00.00");
        System.out.println("\nTOP FITNESS CHALLENGER");
        System.out.println("==========================");
        System.out.println("PARTICIPANT NAME \t\t ID NO. \t\t SCORE");
        for (int i = 0; i < names.length; i++) {
            System.out.println(names[i] + "\t\t" + ids[i] + "\t\t" + df.format(scores[i]));
        }
        System.out.println("\n" + winnerMessage);
    }
}

Question 3

import java.util.Scanner;

public class SkontiriFileName {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your full name: ");
        String fullName = scanner.nextLine().trim();
        System.out.print("Enter document type (e.g. cv, transcript): ");
        String docType = scanner.nextLine().trim().toLowerCase();

        String[] nameParts = fullName.split(" ");
        String surname = nameParts[nameParts.length - 1].toLowerCase();
        String firstInitial = (nameParts.length > 1) ? String.valueOf(nameParts[0].charAt(0)).toLowerCase() : "";
        String fileName = (nameParts.length > 1) ? 
            surname + "_" + firstInitial + "_" + docType + ".pdf" : 
            surname + "_" + docType + ".pdf";

        System.out.println("Formatted File Name: " + fileName);
    }
}

Question 4  

import java.text.DecimalFormat;

public class WaterUsage {
    private double litersConsumed;
    private String customerType;
    private double hoursUsed;
    private DecimalFormat df = new DecimalFormat("##.00");

    public WaterUsage() {
        this.litersConsumed = 0;
        this.customerType = "Regular";
        this.hoursUsed = 0;
    }

    public void setLitersConsumed(double litersConsumed) {
        this.litersConsumed = litersConsumed;
    }

    public void setCustomerType(String customerType) {
        this.customerType = customerType;
    }

    public void setHoursUsed(double hoursUsed) {
        this.hoursUsed = hoursUsed;
    }

    public double getLitersConsumed() {
        return litersConsumed;
    }

    public String getCustomerType() {
        return customerType;
    }

    public double getHoursUsed() {
        return hoursUsed;
    }

    public double calculateEfficiency() {
        return litersConsumed / hoursUsed;
    }

    public double calculateCost() {
        double cost = 0.0;
        switch (customerType.toLowerCase()) {
            case "regular":
                cost = litersConsumed * 0.50;
                break;
            case "commercial":
                cost = litersConsumed * 0.70;
                break;
            case "industrial":
                cost = litersConsumed * 0.90;
                break;
            default:
                System.out.println("Invalid customer type. Defaulting to Regular.");
                cost = litersConsumed * 0.50;
        }
        return cost;
    }

    public void displayDetails(double cost) {
        System.out.println("\nWater Usage Summary:\n");
        System.out.println("Water Consumed: " + df.format(litersConsumed) + " liters");
        System.out.println("Hours Used: " + hoursUsed + " hours");
        System.out.println("Usage Efficiency: " + df.format(calculateEfficiency()) + " liters/hour");
        System.out.println("Total Cost: R" + df.format(cost));
    }
}


import java.util.Scanner;

public class WaterBillingSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        WaterUsage usage = new WaterUsage();

        System.out.print("Enter Water Consumed (in liters): ");
        usage.setLitersConsumed(scanner.nextDouble());
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Customer Type (Regular/Commercial/Industrial): ");
        usage.setCustomerType(scanner.nextLine());
        System.out.print("Enter Hours Used: ");
        usage.setHoursUsed(scanner.nextDouble());

        double cost = usage.calculateCost();
        usage.displayDetails(cost);
    }
}







/*Question 4 Letter Answers*/

A. import java.text.DecimalFormat;
B. private
C. this.customerType = "residential";
D. this.litersConsumed
E. double
F. return customerType;
G. return litersConsumed / hoursUsed;
H. litersConsumed * 0.50
I. litersConsumed * 0.70
J. litersConsumed * 0.90
K. litersConsumed * 0.50
L. 
public void displayDetails(double cost) {
        System.out.println("\nWater Usage Summary:\n");
        System.out.println("Water Consumed: " + df.format(litersConsumed) + " liters");
        System.out.println("Hours Used: " + hoursUsed + " hours");
        System.out.println("Usage Efficiency: " + df.format(calculateEfficiency()) + " liters/hour");
        System.out.println("Total Cost: R" + df.format(cost));
    }

M. WaterUsage usage = new WaterUsage();
N. usage.setLitersConsumed(waterConsumed);
O. usage.setCustomerType(customerType);
P. usage.setHoursUsed(hoursUsed);
Q. usage.calculateCost();
R. usage.displayDetails(cost);
